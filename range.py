# #Виведи всі числа від 1 до 10 включно.
# for f in range(1, 11):
#     print(f)
#
# # Виведи всі числа від 5 до 15 включно.
# print(*range(5,16), sep=",")
#
# # Використай цикл for і range(), щоб вивести всі парні числа від 2 до 20.
#
# # перевіряється парність
# #",".join робить з чисел рядки і з’єднує їх через кому
# print(",".join(str(f) for f in range(2, 21) if f % 2 == 0))
#
# # sep="," вставляє кому між числами не перетворюючи в рядок
# print(*[f for f in range(2, 21) if f % 2 == 0], sep=",")
#
# # парність не перевіряється, але початок (2) і крок (2) забезпечують виведення парних чисел.
# print(",".join(str(f) for f in range(2, 21, 2)))
#
# #Виведи числа від 10 до 0 у зворотньому порядку (спадання).
# print(*range(0,11)[::-1], sep=",") # [::-1] універсальний запис використовується замість reversed()
# print(*range(10,-1,-1), sep=",") # більш просто, але лише в range
#
# # Виведи всі непарні числа від 1 до 20.
# print(",".join(str(f) for f in range(1, 21) if f % 2 != 0))
# print(*range(1, 21, 2), sep=",")
#
# # Виведи кожне третє число від 0 до 30.
# print(*range(0,31,3), sep=",")

#Порахуй суму чисел від 1 до 50.

#короткий запис, слід використовувати коли необхідна лише сума
print(sum(range (1,51)))

# Рішення через функцію, слід використовувати коли необхідно додавати якісь перевірки, наприклад:
total = 0
for i in range(1,51):
    if i % 2 == 0:
     total +=i
print(total)
# але можна й так:
print(sum(range(2,51,2)))
# або:
print(sum(i for i in range(1, 51) if i % 2 == 0))

#Порахуй кількість чисел від 1 до 100, які діляться на 7 без залишку.
print(len(list(c for c in range(1, 101) if c % 7 == 0)))

# 1 перед for — це значення, яке ми генеруємо для кожного числа, що проходить умову.
# Наприклад:
# c = 7  →  7 % 7 == 0  →  генератор повертає 1
# c = 14 → 14 % 7 == 0  →  генератор повертає 1
# і так далі до 98.
# Таким чином, генератор “створює” стільки одиниць, скільки чисел діляться на 7.
print(sum(1 for c in range(1, 101) if c % 7 == 0))
